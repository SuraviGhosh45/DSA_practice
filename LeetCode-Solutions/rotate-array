Problem Link --> https://leetcode.com/problems/rotate-array/

Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]

Explanation:
For nums = [1,2,3,4,5,6,7] and k = 3:
After reversing entire array: [7,6,5,4,3,2,1]
Reverse first 3: [5,6,7,4,3,2,1]
Reverse rest: [5,6,7,1,2,3,4]

Solution:
1.To rotate the array right by k steps:
2.Reverse the entire array.
3.Reverse the first k elements.
4.Reverse the remaining n-k elements.

Time Complexity: O(n) 
Space Complexity: O(1) 

Code:
class Solution(object):
    @staticmethod
    def reverse(nums,left,right):
        while (left<right):
            nums[left],nums[right]=nums[right],nums[left]
            left+=1
            right-=1
    def rotate(self,nums, k):
        if len(nums)<=1 or k==0:
            return nums
        n=len(nums)
        k=k%n
        Solution.reverse(nums,0,n-1)
        Solution.reverse(nums,0,k-1)
        Solution.reverse(nums,k,n-1)
        
        
