Problem Link --> https://leetcode.com/problems/move-zeroes/description/

Example 2:
Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]

Explanation:
shift zeros to the end of the array by swapping 0s with non-zero element

Solution:
1.Use two pointers i and j:
 -i tracks the position to place the next non-zero element.
 -j scans ahead from index 1 to the end of the list.
2.When nums[i] is 0 and nums[j] is non-zero, swap them and move i forward.
3.If nums[i] is already non-zero, just increment i.

Time Complexity: O(n) 
Space Complexity: O(1) 

Code:
class Solution(object):
    def moveZeroes(self, nums):
        if len(nums)==1:
            return nums
        i=0
        for j in range(1,len(nums)):
            if nums[i]==0 and nums[j]!=0:
                nums[i],nums[j]=nums[j],nums[i]
                i+=1
            if nums[i]!=0:
                i+=1
