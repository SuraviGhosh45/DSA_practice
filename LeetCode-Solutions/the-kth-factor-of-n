problem Link --> https://leetcode.com/problems/the-kth-factor-of-n/description/

Example:
Input: n = 12, k = 3
Output: 3

Explanation: 
Factors list is [1, 2, 3, 4, 6, 12], the 3rd factor is 3.

Solution:
1.Initialize a list to store all factors of n.

2.Iterate from 1 to n:
  If a number i divides n with no remainder (n % i == 0), it is a factor.
  Append i to the factor list.

3.After collecting all factors check If the total number of factors is greater than or equal to k,
return the (k-1)-th element from the list (since Python uses 0-based indexing).
Otherwise, return -1 if k is larger than the number of factors.

Time Complexity--> O(N)
Spcae Complexity--> O(N)

Code:
class Solution(object):
    def kthFactor(self, n, k):
        factor=[]
        for i in range(1, n+1): 
            if n%i==0:
              factor.append(i)
        if len(factor) > k-1:
            return factor[k-1]
        else:
          return -1
